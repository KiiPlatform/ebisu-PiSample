This is a sample application for thing-if SDK running on Raspberry Pi.
This sample updates temperature from sensor to kii cloud, and waiting command to turn on/off led.
## Used Hardware
- Raspberry Pi Zero W Rev 1.1 (confirmed)
- One Wire Digital Temperature Sensor - [DS18B20](http://osoyoo.com/2017/05/27/ds18b20-temperature-sensor/)
- [full color RGB LED](http://osoyoo.com/2015/03/24/rgb-color-module-project/)

Note that for the used sensor/led, you can use alternative ones.

## Setup Pi
You should be already installed linux OS image to SD card of your Raspberry Pi. It is not the scope about how to prepare a SD card.
Login to console of your Pi, and execute the following steps.

### install the necessary development package to compile source code
- install build-essential
  ```
  sudo apt-get install build-essential
  ```
- install libssl
  ```
  sudo apt-get install libssl-dev
  ```
- install cmake
  ```
  sudo apt-get install cmake
  ```
  the version of `cmake` is required to be at least `3.5`. So if the version of cmake in your OS is lower than it. You should consider to build cmake from source. You can try the following script to build cmake from source:

  ```
    sudo apt-get remove cmake
    wget https://cmake.org/files/v3.10/cmake-3.10.2-Linux-x86_64.sh
    sudo bash cmake-3.10.2-Linux-x86_64.sh --skip-license --exclude-subdir --prefix=/usr/local

  ```
- install wiringpi, library for gpio control
  ```
  sudo apt-get purge wiringpi
  ```

### setup and connect 1-wire digital temperature sensor
Please check [this tutorial](https://www.waveshare.com/wiki/Raspberry_Pi_Tutorial_Series:_1-Wire_DS18B20_Sensor) to setup Pi.
- Make sure signal pin of sensor connect to [GPIO BCM 4 pin of Pi](https://www.raspberrypi.org/documentation/usage/gpio/)
- Make sure GROUND pin of sensor connect to any GROUND pins of Pi
- Make sure VCC pin of sensor connect to any 5V pins of Pi

#### change source code to connected sensor
Once 1-wire temperature sensor detected by Pi, there is a directory created to present this sensor.
You can check by

```
ls /sys/bus/w1/devices
```
results like:
```
28-0416925607ff  w1_bus_master1
```
As above output, there is `28-***`. It is connceted DS18B20 sensor. Change `W1_FILE_NAME` in `pi_control.h` with the actual value in your Pi.
Please note that, if there are more than one DS18B20 sensors connected to Pi. There are more than one that kind of folder existing.

## connect full color led
- Connect GROUND pin of led to any GROUND pin of Pi.
- Connect RED/GREEN/BLUE pins to any GPIO BCM pin of pi.
  In the sample, BLUE pin connect to GPIO BCM 13, RED pin connect to 19, and GREEN pin connect to 26

If you connect RED/GREEN/BLUE to different pins, you need to change the following defines in `pi_control.h`.
- BLUE_LED
- RED_LED
- GREEN_LED

## Build sample

Build and install thing-if SDK.

Please refer to [README](../README.mkd) for build and installation.

If you installed thing-if SDK in custom directory,
Plese edit the Makefile and adjust `INCLUDES` and `LD_FLAGS` variable
to include the custom directory path.
After that, execute following command:

```sh
make
```

This makes exampleapp.

If you want to build exampleapp with debug mode. Execute following
command:

```sh
make DEBUG=1
```

## How to use

### onboard with the same vendor thing id setting in `example.h`
Onboard with the following values:
- thing-type: MyAirConditioner
- firmware-version: v1

### start up thing
```sh
./exampleapp onboard --vendor-thing-id={vendor-thing-id} --password={password}
```